name: Django CI

on:
  push:
    branches: ["reorganiza_estruta"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  test-matrix:
    name: Matrix de Testes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
        test-type: ["bd", "api", "etl"]

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Configurar Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Instalar Dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar Migrações
        run: |
          python manage.py migrate --noinput

      - name: Rodar Testes BD
        if: ${{ matrix.test-type == 'bd' }}
        run: |
          cd aluga_ai_web
          pytest BancoDeDados/test_bd.py --template=html1/index.html --report=report_bd.html

      - name: Upload do relatório BD
        if: ${{ matrix.test-type == 'bd' && success() }}
        uses: actions/upload-artifact@v4
        with:
          name: report_bd
          path: ./aluga_ai_web/report_bd.html

      - name: Rodar Testes API
        if: ${{ matrix.test-type == 'api' }}
        run: |
          cd aluga_ai_web
          pytest Dados/test_etl.py --template=html1/index.html --report=report_api.html

      - name: Upload do relatório API
        if: ${{ matrix.test-type == 'api' && success() }}
        uses: actions/upload-artifact@v4
        with:
          name: report_api
          path: ./aluga_ai_web/report_api.html

      - name: Rodar Testes ETL
        if: ${{ matrix.test-type == 'etl' }}
        working-directory: aluga_ai_web/Dados
        run: |
          pytest test_etl.py

      - name: Executar ETL (opcional, só na matrix ETL)
        if: ${{ matrix.test-type == 'etl' }}
        working-directory: aluga_ai_web/Dados
        run: |
          python etl.py

  run-django-server:
    name: Run Django Server
    runs-on: ubuntu-latest
    needs: test-matrix

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        run: |
          python manage.py migrate --noinput

      - name: Start Django server in background
        run: |
          nohup python manage.py runserver 0.0.0.0:8000 &
          sleep 10
          echo "Servidor Django iniciado."

      - name: Test server response
        run: |
          curl -I http://127.0.0.1:8000 || echo "Servidor não respondeu."

      - name: Run Django tests
        run: |
          python manage.py test
